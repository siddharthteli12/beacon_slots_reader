CREATE TABLE IF NOT EXISTS slots {
    attestationscount INT NOT NULL,
    attesterslashingscount INT NOT NULL,
    blockroot: CHAR(66) NOT NULL,
    depositscount INT NOT NULL,
    epoch INT NOT NULL,
    eth1data_blockhash: CHAR(66),
    eth1data_depositcount INT NOT NULL,
    eth1data_depositroot: CHAR(66),
    exec_base_fee_per_gas INT NOT NULL,
    exec_block_hash: Option<String>,
    exec_block_number INT NOT NULL,
    exec_extra_data: TEXT ,
    exec_fee_recipient: CHAR(42),
    exec_gas_limit INT NOT NULL,
    exec_gas_used INT NOT NULL,
    exec_logs_bloom: TEXT,
    exec_parent_hash: CHAR(66),
    exec_random: CHAR(66),
    exec_receipts_root: CHAR(66),
    exec_state_root: CHAR(66),
    exec_timestamp INT NOT NULL,
    exec_transactions_count INT NOT NULL,
    graffiti: CHAR(66),
    graffiti_text: TEXT,
    parentroot: CHAR(66),
    proposer INT NOT NULL,
    proposerslashingscount INT NOT NULL,
    randaoreveal: CHAR(194),
    signature: CHAR(194),
    slot INT PRIMARY KEY,
    stateroot: CHAR(66),
    status: CHAR(1),
    syncaggregate_bits: CHAR(130),
    syncaggregate_participation: f64,
    syncaggregate_signature: TEXT,
    voluntaryexitscount INT NOT NULL,
    withdrawalcount INT NOT NULL,
};






/*
    attestationscount INT NOT NULL,
    attesterslashingscount INT NOT NULL,
    blockroot: String,
    depositscount INT NOT NULL,
    epoch INT NOT NULL,
    eth1data_blockhash: Option<String>,
    eth1data_depositcount INT NOT NULL,
    eth1data_depositroot: Option<String>,
    exec_base_fee_per_gas INT NOT NULL,
    exec_block_hash: Option<String>,
    exec_block_number INT NOT NULL,
    exec_extra_data: Option<String>,
    exec_fee_recipient: Option<String>,
    exec_gas_limit INT NOT NULL,
    exec_gas_used INT NOT NULL,
    exec_logs_bloom: Option<String>,
    exec_parent_hash: Option<String>,
    exec_random: Option<String>,
    exec_receipts_root: Option<String>,
    exec_state_root: Option<String>,
    exec_timestamp INT NOT NULL,
    exec_transactions_count INT NOT NULL,
    graffiti: Option<String>,
    graffiti_text: Option<String>,
    parentroot: Option<String>,
    proposer INT NOT NULL,
    proposerslashingscount INT NOT NULL,
    randaoreveal: Option<String>,
    signature: Option<String>,
    slot INT NOT NULL,
    stateroot: Option<String>,
    status: Option<String>,
    syncaggregate_bits: Option<String>,
    syncaggregate_participation: f64,
    syncaggregate_signature: Option<String>,
    voluntaryexitscount INT NOT NULL,
    withdrawalcount INT NOT NULL,

*/